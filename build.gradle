buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        

    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "Heslington Hustle"
        gdxVersion = '1.12.1'
        roboVMVersion = '2.3.20'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

def checkstyleVersion = '10.15.0'

project(":desktop") {
    apply plugin: 'java-library'

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    }
}

project(":core") {
    apply plugin: "java-library"
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'

    configurations {
        checkstyleRules
    }

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
        checkstyleRules("com.puppycrawl.tools:checkstyle:${checkstyleVersion}") {
            transitive = false
        }
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    checkstyle {
        toolVersion "${checkstyleVersion}"
        config = resources.text.fromArchiveEntry(configurations.checkstyleRules,
                'google_checks.xml')
    }
}

project(":tests") {
    apply plugin: "java"
    apply plugin: "jacoco"

    sourceSets.test.java.srcDirs = ["src/"]

    dependencies {
        implementation project(":core")

        implementation "junit:junit:4.+"
        implementation "org.mockito:mockito-core:5.+"

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

        testImplementation 'junit:junit:4.+'
        testImplementation "org.mockito:mockito-core:5.+"

        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }

    jacocoTestReport {
        dependsOn test
        sourceSets project(':core').sourceSets.main
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: ['**/*Tests.*', '**/GdxTestRunner.*'])
            }))
        }
    }
    test {
        finalizedBy jacocoTestReport
    }
}